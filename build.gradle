plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.ajoberstar.git-publish' version '3.0.0'
    id 'com.palantir.git-version' version '0.12.2'
    id 'jacoco'
}

group 'ckn'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

jacoco {
    toolVersion = "0.8.7"
}
gitPublish {
    // where to publish to (repo must exist)
    repoUri = 'https://github.com/tak-st/majang-yakitori.git'
    // branch will be created if it doesn't exist
    branch = 'gh-pages'
    // generally, you don't need to touch this
    repoDir = file("$buildDir/gitPublish")

    // what to publish, this is a standard CopySpec
    contents {
        from 'src/pages'
        from(javadoc) {
            into 'api'
        }
    }

    // what to keep in the existing branch (include=keep)
    preserve {
        include '1.0.0/**'
        exclude '1.0.0/temp.txt'
    }

    // message used when committing changes
    commitMessage = 'JavaDoc を GitHubPages へ'
}
sourceCompatibility = '15'
targetCompatibility = '15'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
javadoc {
    options.locale = 'ja_JP'
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}
build.dependsOn jacocoTestReport
application {
    mainModule = 'ckn.yakitori'
    mainClass = 'ckn.yakitori.main'
}
tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'
javafx {
    version = '15.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.graphics']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.0')
    implementation('com.dlsc.formsfx:formsfx-core:11.3.2') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:11.48') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.1.13') { exclude(group: 'org.openjfx') }
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
    systemProperties System.getProperties()
    finalizedBy(jacocoTestReport)
}